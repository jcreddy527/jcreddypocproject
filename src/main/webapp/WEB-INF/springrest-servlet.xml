<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation=" http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
 http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

 
 <mvc:annotation-driven/>
 
 <mvc:resources mapping="/js/**" location="/js/" />
 
<context:component-scan base-package="org.arpit.java2blog.controller" />
<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>

 <context:property-placeholder location="classpath:database.properties"></context:property-placeholder>
<context:component-scan base-package="org.arpit.java2blog.controller" />


	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		 <property name="driverClassName" value="${database.driver}"></property>
		 <property name="url" value="${database.url}"></property>
		 <property name="username" value="${database.user}"></property>
		 <property name="password" value="${database.password}"></property>
	</bean>

	<bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
	 <property name="dataSource" ref="dataSource"></property>
	 <property name="annotatedClasses">
	  <list>
	   <value>org.arpit.java2blog.bean.Employee</value>
	  <value>org.arpit.java2blog.bean.Address</value>
	  <value>org.arpit.java2blog.bean.Department</value>
	   <value>org.arpit.java2blog.bean.Project</value>
	 <value>org.arpit.java2blog.bean.EmployeeUpdate</value>	 
	  </list>
	 </property>
	 <property name="hibernateProperties">
	 <props>
	  <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	  <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

	  <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>    
	        </props>
	      </property>
	</bean>
	
	 <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="hibernateTransactionManager">
		 <property name="sessionFactory" ref="sessionFactory"></property>
	 </bean>


</beans>
<!-- 


	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

 <mvc:annotation-driven/>
 <context:component-scan base-package="org.arpit.java2blog.controller" />
 <context:property-placeholder location="classpath:resources/database.properties"></context:property-placeholder>
<context:component-scan base-package="org.arpit.java2blog.controller" />

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		 <property name="driverClassName" value="${database.driver}"></property>
		 <property name="url" value="${database.url}"></property>
		 <property name="username" value="${database.user}"></property>
		 <property name="password" value="${database.password}"></property>
	</bean>

	<bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" id="sessionFactory">
	 <property name="dataSource" ref="dataSource"></property>
	 <property name="annotatedClasses">
	  <list>
	   <value>org.arpit.java2blog.bean.Student</value>
	  </list>
	 </property>
	 <property name="hibernateProperties">
	 <props>
	  <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	  <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

	  <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>    
	        </props>
	      </property>
	</bean>
	
	 <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="hibernateTransactionManager">
		 <property name="sessionFactory" ref="sessionFactory"></property>
	 </bean>

<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter"/>
				<ref bean="xmlMessageConverter"/>
			</list>
		</property>
	</bean>
	
	Configure bean to convert JSON to POJO and vice versa
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>	
	
	<bean id="xmlMessageConverter" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
	</bean>

</beans>

 -->